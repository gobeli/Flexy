$breaks:() !global;
$gutter: 1rem;

@mixin set-breakpoints($breakpoints: ()){
	$breaks: $breakpoints !global;
}

@mixin break($break){
	@media screen and (min-width: #{map-get($breaks,$break)}){
		@content;
	}
}

@mixin row(){
	display: flex;  
	flex-flow: row wrap;
	box-sizing: border-box;          
}

@mixin a-center(){
	align-items: center;    
}

@mixin a-start(){
	align-items: flex-start;
}

@mixin a-end(){
	align-items: flex-end; 
}

@mixin a-stretch(){
	align-self: stretch;   
}

@mixin a-baseline(){
	align-self: baseline; 
}

@mixin j-start(){
	justify-content: flex-start;      
}

@mixin j-end(){
	justify-content: flex-end;        
}

@mixin j-between(){
	justify-content: space-between;         
}

@mixin j-around(){
	justify-content: space-around;
}
@mixin j-center(){
	justify-content: center;
}

@mixin direction-column(){
	flex-direction: column;
}

@mixin self-stretch(){
	align-self: stretch;   
}

@mixin self-baseline(){
	align-self: baseline; 
}

@mixin self-center(){
	align-self: center;    
}

@mixin self-start(){
	align-self: flex-start;
}

@mixin self-end(){
	align-self: flex-end; 
}

@mixin order($order){
	order: $order;
}

@mixin col($break,$width,$offset:null){
	width: 100%;
	@include break($break){
		width: #{100/12 * $width + "%"};
	}
	@if ($offset){
		@include offset($break,$offset);
	}
}

@mixin offset($break,$offset){
	margin-left: 0;
	@include break($break){
		margin-left: #{100/12 * $offset + "%"};
	}
}

@mixin allCols(){	
	$all : "";

	@for $i from 1 through 12 {
		@each $name,$break in $breaks{
			$all : $all + ".#{$name+$i},";			
		}
	}

	#{$all}{
		@content;
	}
}

@mixin defaultGrid(){
	@include row();
	&.a-center{
		@include a-center();
	}
	&.a-start{
		@include a-start();
	}
	&.a-end{
		@include a-end();
	}
	&.a-stretch{
		@include a-stretch();
	}
	&.a-baseline{
		@include a-baseline();
	}
	&.j-start{
		@include j-start();
	}
	&.j-center{
		@include j-center();
	}
	&.j-end{
		@include j-end();
	}
	&.j-between{             
		@include j-between();
	}
	&.j-around{
		@include j-around();              
	}
	&.direction-column{
		@include direction-column();
	}
	.self-center{
		@include a-center();
	}
	.self-start{
		@include a-start();
	}
	.self-end{
		@include a-end();
	}
	.self-stretch{
		@include a-stretch();
	}
	.self-baseline{
		@include a-baseline();
	}
	@for $i from 1 through 12 {
		.order-#{$i}{
			@include order($i);
		}
		@each $name,$break in $breaks{
			.#{$name+$i}{
				@include col($name,$i);
			}
			.offset-#{$name+$i}{
				@include offset($name,$i);
			}
		}
	}
	@include allCols(){
		min-height: 1px;         
		padding: 0 $gutter;
		box-sizing: border-box;
		&.no-gutter{
			padding: 0;
		}                     
	}
}	

