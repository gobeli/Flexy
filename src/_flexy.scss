$breaks:() !global;
$gutter: 1rem;
$prefix: false;

@mixin set-breakpoints($breakpoints: ()){
	$breaks: $breakpoints !global;
}

//$break: one of the specified breaks
@mixin break($break){
	@media screen and (min-width: #{map-get($breaks,$break)}){
		@content;
	}
}

@mixin prefix($property, $value, $prefixes: ("webkit","moz","ms")) {
	@if ($prefix){
		@each $prefix in $prefixes {
			#{'-' + $prefix + '-' + $property}: $value;
		}
	}

	#{$property}: $value;
}

//$inline true | false | default: false
@mixin row($inline: false){
	$flex: flex;
	@if ($inline){
		$flex: inline-flex;
	}
	@include prefix(display,$flex);
	display: -ms-#{$flex}box; // IE10
	@include prefix(flex-flow, row wrap);
	box-sizing: border-box;          
}

//$align: flex-start | flex-end | center | baseline | stretch 
@mixin align-items($align){
	@include prefix(align-items,$align);
}

//$justify: flex-start | flex-end | center | space-between | space-around 
@mixin justify-content($justify){
	@include prefix(justify-content,$justify);	
}

//$direction: row | row-reverse | column | column-reverse
@mixin flex-direction($direction){
	@include prefix(flex-direction,$direction);
}

//$wrap: nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap){
	@include prefix(flex-wrap,$wrap);
}

//$align: auto | flex-start | flex-end | center | baseline | stretch 
@mixin align-self($align){
	@include prefix(align-self,$align);
}

// Integer
@mixin order($order){
	@include prefix(order,$order);
}

//$break: one of the specified breaks
//$width: 1-12
//$offset: <empty> | 1-12 
@mixin col($break,$width,$offset:null){
	width: 100%;
	@include break($break){
		width: #{100/12 * $width + "%"};
	}
	@if ($offset){
		@include offset($break,$offset);
	}
}

//$break: one of the specified breaks
//$offset: 1-12
@mixin offset($break,$offset){
	margin-left: 0;
	@include break($break){
		margin-left: #{100/12 * $offset + "%"};
	}
}

@mixin allCols(){	
	$all : "";

	@for $i from 1 through 12 {
		@each $name,$break in $breaks{
			$all : $all + ".#{$name+$i},";			
		}
	}

	#{$all}{
		@content;
	}
}

@mixin defaultGrid(){
	@include row();
	&.a-center{
		@include align-items(center);
	}
	&.a-start{
		@include align-items(flex-start);
	}
	&.a-end{
		@include align-items(flex-end);
	}
	&.a-stretch{
		@include align-items(stretch);
	}
	&.a-baseline{
		@include align-items(baseline);
	}
	&.j-center{
		@include justify-content(center);
	}
	&.j-start{
		@include justify-content(flex-start);
	}
	&.j-end{
		@include justify-content(flex-end);
	}
	&.j-between{             
		@include justify-content(space-between);
	}
	&.j-around{
		@include justify-content(space-around);              
	}
	&.direction-column{
		@include flex-direction(column);
	}
	.self-center{
		@include align-self(center);
	}
	.self-start{
		@include align-self(flex-start);
	}
	.self-end{
		@include align-self(flex-end);
	}
	.self-stretch{
		@include align-self(stretch);
	}
	.self-baseline{
		@include align-self(baseline);
	}
	@for $i from 1 through 12 {
		.order-#{$i}{
			@include order($i);
		}
		@each $name,$break in $breaks{
			.#{$name+$i}{
				@include col($name,$i);
			}
			.offset-#{$name+$i}{
				@include offset($name,$i);
			}
		}
	}
	@include allCols(){
		min-height: 1px;         
		padding: 0 $gutter;
		box-sizing: border-box;
		&.no-gutter{
			padding: 0;
		}                     
	}
}	

